Traceback (most recent call last):
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/asyncio/base_events.py", line 719, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/micromamba/envs/geocat-applications/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import geocat.datafiles as gdf
import xarray as xr
import numpy as np
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
from scipy import optimize
------------------

----- stderr -----
Downloading file 'registry.txt' from 'https://github.com/NCAR/GeoCAT-datafiles/raw/main/registry.txt' to '/home/runner/.cache/geocat'.
------------------

[31m---------------------------------------------------------------------------[39m
[31mValueError[39m                                Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 1[39m
[32m----> [39m[32m1[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mgeocat[39;00m[34;01m.[39;00m[34;01mdatafiles[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mgdf[39;00m
[32m      2[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mxarray[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mxr[39;00m
[32m      3[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mnumpy[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mnp[39;00m

[36mFile [39m[32m~/micromamba/envs/geocat-applications/lib/python3.13/site-packages/geocat/datafiles/__init__.py:28[39m
[32m     25[39m [38;5;28;01mif[39;00m dev_data_path [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m os.path.exists(dev_data_path):
[32m     26[39m     POOCH.path = dev_data_path
[32m---> [39m[32m28[39m [43m_update_registry[49m[43m([49m[43mPOOCH[49m[43m)[49m
[32m     30[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mget[39m(fname):
[32m     31[39m     [38;5;28;01mreturn[39;00m POOCH.fetch(fname)

[36mFile [39m[32m~/micromamba/envs/geocat-applications/lib/python3.13/site-packages/geocat/datafiles/__init__.py:21[39m, in [36m_update_registry[39m[34m(p)[39m
[32m     19[39m [38;5;28;01mif[39;00m old_sha256 != new_sha256:
[32m     20[39m     p.registry[[33m"[39m[33mregistry.txt[39m[33m"[39m] = new_sha256
[32m---> [39m[32m21[39m     p.load_registry([43mp[49m[43m.[49m[43mfetch[49m[43m([49m[33;43m"[39;49m[33;43mregistry.txt[39;49m[33;43m"[39;49m[43m)[49m)

[36mFile [39m[32m~/micromamba/envs/geocat-applications/lib/python3.13/site-packages/pooch/core.py:589[39m, in [36mPooch.fetch[39m[34m(self, fname, processor, downloader, progressbar)[39m
[32m    586[39m     [38;5;28;01mif[39;00m downloader [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m    587[39m         downloader = choose_downloader(url, progressbar=progressbar)
[32m--> [39m[32m589[39m     [43mstream_download[49m[43m([49m
[32m    590[39m [43m        [49m[43murl[49m[43m,[49m
[32m    591[39m [43m        [49m[43mfull_path[49m[43m,[49m
[32m    592[39m [43m        [49m[43mknown_hash[49m[43m,[49m
[32m    593[39m [43m        [49m[43mdownloader[49m[43m,[49m
[32m    594[39m [43m        [49m[43mpooch[49m[43m=[49m[38;5;28;43mself[39;49m[43m,[49m
[32m    595[39m [43m        [49m[43mretry_if_failed[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43mretry_if_failed[49m[43m,[49m
[32m    596[39m [43m    [49m[43m)[49m
[32m    598[39m [38;5;28;01mif[39;00m processor [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    599[39m     [38;5;28;01mreturn[39;00m processor([38;5;28mstr[39m(full_path), action, [38;5;28mself[39m)

[36mFile [39m[32m~/micromamba/envs/geocat-applications/lib/python3.13/site-packages/pooch/core.py:808[39m, in [36mstream_download[39m[34m(url, fname, known_hash, downloader, pooch, retry_if_failed)[39m
[32m    806[39m [38;5;28;01mwith[39;00m temporary_file(path=[38;5;28mstr[39m(fname.parent)) [38;5;28;01mas[39;00m tmp:
[32m    807[39m     downloader(url, tmp, pooch)
[32m--> [39m[32m808[39m     [43mhash_matches[49m[43m([49m[43mtmp[49m[43m,[49m[43m [49m[43mknown_hash[49m[43m,[49m[43m [49m[43mstrict[49m[43m=[49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43msource[49m[43m=[49m[38;5;28;43mstr[39;49m[43m([49m[43mfname[49m[43m.[49m[43mname[49m[43m)[49m[43m)[49m
[32m    809[39m     shutil.move(tmp, [38;5;28mstr[39m(fname))
[32m    810[39m [38;5;28;01mbreak[39;00m

[36mFile [39m[32m~/micromamba/envs/geocat-applications/lib/python3.13/site-packages/pooch/hashes.py:176[39m, in [36mhash_matches[39m[34m(fname, known_hash, strict, source)[39m
[32m    174[39m     [38;5;28;01mif[39;00m source [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m    175[39m         source = [38;5;28mstr[39m(fname)
[32m--> [39m[32m176[39m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[32m    177[39m         [33mf[39m[33m"[39m[38;5;132;01m{[39;00malgorithm.upper()[38;5;132;01m}[39;00m[33m hash of downloaded file ([39m[38;5;132;01m{[39;00msource[38;5;132;01m}[39;00m[33m) does not match[39m[33m"[39m
[32m    178[39m         [33mf[39m[33m"[39m[33m the known hash: expected [39m[38;5;132;01m{[39;00mknown_hash[38;5;132;01m}[39;00m[33m but got [39m[38;5;132;01m{[39;00mnew_hash[38;5;132;01m}[39;00m[33m. Deleted[39m[33m"[39m
[32m    179[39m         [33m"[39m[33m download for safety. The downloaded file may have been corrupted or[39m[33m"[39m
[32m    180[39m         [33m"[39m[33m the known hash may be outdated.[39m[33m"[39m
[32m    181[39m     )
[32m    182[39m [38;5;28;01mreturn[39;00m matches

[31mValueError[39m: SHA256 hash of downloaded file (registry.txt) does not match the known hash: expected e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 but got 6e6525a63a5f5294c7c4895598cc737c63b3c62c346e9f8be0b8cc7180522225. Deleted download for safety. The downloaded file may have been corrupted or the known hash may be outdated.

